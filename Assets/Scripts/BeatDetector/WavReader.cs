// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.IO;
using System.Collections.Generic;

namespace BeatProcessor
{
	public class WavReader
	{
		private String fileName; 
		private WavHeader header;
		private List<short> lDataList;
		private List<short> rDataList;
		
		public WavReader(String fileName) {
			this.fileName = fileName;
			this.header = new WavHeader();
			this.lDataList = new List<short>();
			this.rDataList = new List<short>();
		}
		
		public void readWav() {
			FileStream wavFileStream = new FileStream(fileName, FileMode.Open, FileAccess.Read);
			BinaryReader reader = new BinaryReader(wavFileStream);
			header.riffID = reader.ReadBytes(4);
			header.size = reader.ReadUInt32();
			header.wavID = reader.ReadBytes(4);
			header.fmtID = reader.ReadBytes(4);
			header.fmtSize = reader.ReadUInt32();
			header.format = reader.ReadUInt16();
			header.channels = reader.ReadUInt16();
			header.sampleRate = reader.ReadUInt32();
			header.bytePerSec = reader.ReadUInt32();
			header.blockSize = reader.ReadUInt16();
			header.bit = reader.ReadUInt16();
			header.dataID = reader.ReadBytes(4);
			header.dataSize = reader.ReadUInt32();
			
			for (int i = 0; i < header.dataSize / header.blockSize; i++) {
				try{
					lDataList.Add((short)reader.ReadUInt16());
					rDataList.Add((short)reader.ReadUInt16());
				}catch{
					break;
				}
			}
			
			if (reader != null)
			{
				reader.Close();
			}
			if (wavFileStream != null)
			{
				wavFileStream.Close();
			}
		}
		
		public List<short> getChannel(bool left){
			if (left) {
				return new List<short> (lDataList);
			} else {
				return new List<short> (rDataList);
			}
		}
		
		public String getFileName() {
			return this.fileName;
		}
		
		public WavHeader getHeader() {
			return this.header;
		}
	}
}

